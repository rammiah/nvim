export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="robbyrussell"
DISABLE_AUTO_UPDATE="true"
DISABLE_UNTRACKED_FILES_DIRTY="true"

ZSH_TMUX_DEFAULT_SESSION_NAME="dev"
ZSH_TMUX_FIXTERM=false

plugins=(git common-aliases fzf zsh-syntax-highlighting zsh-completions tmux)

# user config
source $ZSH/oh-my-zsh.sh

_fix_cursor() {
   echo -ne "\e[5 q"
}

precmd_functions+=(_fix_cursor)

if [ -d ~/.zshconf ]
then
    for file in ~/.zshconf/*; do
        source "$file"
    done
fi

export BAT_THEME="Solarized (light)"
alias cat="bat"
alias rm="/usr/local/bin/trash"
# boe
export RUNTIME_IDC_NAME="boe"
# editor
export VISUAL="nvim"
export EDITOR="$VISUAL"

# Load NVM
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && source "$NVM_DIR/nvm.sh" --no-use
# export PATH="$NVM_DIR/versions/node/v16.13.2/bin:$PATH"
[ -s "$NVM_DIR/bash_completion" ] && source "$NVM_DIR/bash_completion"  # This loads nvm bash_completion 

# c & c++ compilers
# export LD_LIBRARY_PATH=/usr/local/lib
# export CC=/usr/local/bin/gcc
# export CXX=/usr/local/bin/g++

# rust toolchain
# export RUSTUP_DIST_SERVER="https://rsproxy.cn"
# export RUSTUP_UPDATE_ROOT="https://rsproxy.cn/rustup"
export FZF_DEFAULT_COMMAND="rg --files --hidden --follow --glob '!.git' --glob '!kitex_gen' --glob '!thrift_gen'"
# fzf
[ -s ~/.fzf.zsh ] && source ~/.fzf.zsh

# gopath & goroot settings
export GOROOT="$HOME/.gos/go"
export GOPATH="$HOME/code/gopath"
export PATH="$GOROOT/bin:$GOPATH/bin:$PATH" 
# for rootless docker
export PATH="$HOME/bin:$HOME/.local/bin:$PATH"
# export DOCKER_HOST=unix:///run/user/1000/docker.sock

# params alias
unalias gco
fzf-git-branch() {
    git rev-parse HEAD > /dev/null 2>&1 || return

    git branch --color=always --all --sort=-committerdate |
        grep -v HEAD |
        fzf --height 50% --ansi --no-multi --preview-window right:65% \
            --preview 'git log -n 50 --color=always --date=short --pretty="format:%C(auto)%cd %h%d %s" $(sed "s/.* //" <<< {})' |
        sed "s/.* //"
}

gco() {
	# check in git respository
    git rev-parse HEAD > /dev/null 2>&1 || return

	# params count
	if (( $# > 0 )) ; then
		git checkout $*
		return
	fi

    local branch

    branch=$(fzf-git-branch)
    if [[ "$branch" = "" ]]; then
        echo "No branch selected."
        return
    fi

    # If branch name starts with 'remotes/' then it is a remote branch. By
    # using --track and a remote branch name, it is the same as:
    # git checkout -b branchName --track origin/branchName
    if [[ "$branch" = 'remotes/'* ]]; then
        git checkout --track $branch
    else
        git checkout $branch;
    fi
}

[ -s "$HOME/.acme.sh/acme.sh.env" ] && source "$HOME/.acme.sh/acme.sh.env"

eval "$(direnv hook zsh)"
