#!/usr/bin/env zsh
# zmodload zsh/zprof
export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="robbyrussell"
DISABLE_AUTO_UPDATE="true"
DISABLE_UNTRACKED_FILES_DIRTY="true"

ZSH_TMUX_DEFAULT_SESSION_NAME="dev"
ZSH_TMUX_FIXTERM=false

if [ -d ~/.zshconf/pre ]
then
    for file in ~/.zshconf/pre/*; do
        source "$file"
    done
fi

plugins=( 
    autojump
    common-aliases 
    fzf 
    git 
    golang
    gpg-agent
    kubectl
    node
    npm
    ripgrep
    rsync
    rust
    systemd
    tig
    tmux
    ufw
    yarn
    zsh-completions
    zsh-syntax-highlighting
)

# user config
source $ZSH/oh-my-zsh.sh

if [ -d ~/.zshconf/post ]
then
    for file in ~/.zshconf/post/*; do
        source "$file"
    done
fi

_fix_cursor() {
    echo -ne "\e[5 q"
}

precmd_functions+=(_fix_cursor)

export BAT_THEME="Solarized (light)"
alias cat="bat"
alias rm="trash"
if [[ "$TERM" == "xterm-kitty" ]] then
    alias icat="kitty +kitten icat"
fi
# alias lz="lazygit"
# editor
export VISUAL="nvim"
export EDITOR="$VISUAL"
export NEOVIDE_MULTIGRID="true"

# rust toolchain
# export RUSTUP_DIST_SERVER="https://rsproxy.cn"
# export RUSTUP_UPDATE_ROOT="https://rsproxy.cn/rustup"
# export FZF_DEFAULT_COMMAND="rg --files --hidden --follow --glob '!.git' --glob '!kitex_gen' --glob '!thrift_gen'"
export FZF_DEFAULT_COMMAND="fd --type file --hidden --follow --color=always --glob '!.git' --glob '!kitex_gen' --glob '!thrift_gen'"

# fzf
[ -s ~/.fzf.zsh ] && source ~/.fzf.zsh

# gopath & goroot settings
export GOROOT="$HOME/.gos/go"
export GOPATH="$HOME/code/gopath"
export PATH="$GOROOT/bin:$GOPATH/bin:$PATH" 
# for rootless docker
export PATH="$HOME/bin:$HOME/.local/bin:$PATH"
# export DOCKER_HOST=unix:///run/user/1000/docker.sock

# params alias
unalias gco

_fzf_git_branch() {
    # get all branch
    git rev-parse HEAD > /dev/null 2>&1 || return

    git branch --color=always --all --sort=-committerdate |
        grep -v HEAD |
        fzf --height 50% --ansi --no-multi --preview-window right:65% \
        --preview 'git log -n 50 --color=always --date=short --pretty="format:%C(auto)%cd %h%d %s" $(sed "s/.* //" <<< {})' |
        sed "s/.* //"
    }

    gco() {
        # check in git respository
        git rev-parse HEAD > /dev/null 2>&1 || return

    # params count
    if (( $# > 0 )) ; then
        git checkout $*
        return
    fi

    local branch

    branch=$(_fzf_git_branch)
    if [[ "$branch" = "" ]]; then
        echo "No branch selected."
        return
    fi

    # If branch name starts with 'remotes/' then it is a remote branch. By
    # using --track and a remote branch name, it is the same as:
    # git checkout -b branchName --track origin/branchName
    if [[ "$branch" = 'remotes/'* ]]; then
        git checkout --track $branch
    else
        git checkout $branch;
    fi
}

lscwd() {
    proc="nvim"
    if (( $# > 0 )); then
        proc=$1
    fi
    procs=$(pidof $proc | tr ' ' ',')
    if  [[ "$procs" = "" ]] ; then
        echo "no $proc instance"
        return
    fi
    lsof -p $procs 2>&1 | grep -v "^lsof" | grep cwd | awk -F' ' '{printf "%s\t%s\n",$2,$9}'
}

[ -s "$HOME/.acme.sh/acme.sh.env" ] && source "$HOME/.acme.sh/acme.sh.env"

eval "$(direnv hook zsh)"

# krew path
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
